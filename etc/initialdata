use strict;
use warnings;

our @CustomFields = (
{
    Name        => 'Escalation level',
    Description => 'Level that ticket escalated to',
    Type        => 'FreeformSingle',
    LookupType  => 'RT::Queue-RT::Ticket',
},

{
    Name        => 'Escalation set',
    Description => 'Current ticket escalation set',
    Type        => 'FreeformSingle',
    LookupType  => 'RT::Queue-RT::Ticket',
}
);


our @Scrips = (
{
    Description             =>  'Escalation 0 -> 1',
    Queue                   =>  0,
    ScripCondition          =>  'User Defined',
    ScripAction             =>  'Notify AdminCcs as Comment',
    Template                =>  'Blank',
    CustomIsApplicableCode  =>  '
# lvl_transitions - transitions between levels when scrip can apply
# Example:
# my %lvl_transitions = (
#    0 => [1, 2, 3, "something"],
#    1 => [2, 3],
#    2 => [3]
# );

my %lvl_transitions = (
    0 => [1, 2, 3],
    1 => [2, 3],
    2 => [3]
);

return 0 unless (
    $self->TransactionObj->Type eq "CustomField" 
    && $self->TransactionObj->ReferenceType eq "RT::ObjectCustomFieldValue" 
    && $self->TicketObj->LoadCustomFieldByIdentifier(RT->Config->Get("EscalationField"))->id eq $self->TransactionObj->Field
);

my $old_lvl = ($self->TransactionObj->OldReference && $self->TransactionObj->OldReferenceObject->Content) // "";
my $new_lvl = ($self->TransactionObj->NewReference && $self->TransactionObj->NewReferenceObject->Content) // "";
exists($lvl_transitions{$old_lvl}) 
    && grep{ $_ eq $new_lvl } @{$lvl_transitions{$old_lvl}};
'
}
);