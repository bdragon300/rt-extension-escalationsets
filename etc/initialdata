use strict;
use warnings;

our @CustomFields = (
{
    Name        => 'Escalation level',
    Description => 'Level that ticket escalated to',
    Type        => 'FreeformSingle',
    LookupType  => 'RT::Queue-RT::Ticket',
},

{
    Name        => 'Escalation set',
    Description => 'Current ticket escalation set',
    Type        => 'FreeformSingle',
    LookupType  => 'RT::Queue-RT::Ticket',
}
);


our @Scrips = (
{
    Description             =>  'Escalation 0 -> 1',
    Queue                   =>  0,
    ScripCondition          =>  'User Defined',
    ScripAction             =>  'Notify AdminCcs as Comment',
    Template                =>  'Blank',
    CustomIsApplicableCode  =>  '
# This Scrip executes when escalation level goes from $from to $to
# If you want to create scrips for another levels then:
# * Create new scrip
# * Copy this code there to "Custom Condition"
# * Set necessary $from and $to variables value
# * Select "UserDefined" in Condition
# * Select necessary "Action" and "Template"

my $from = "0";
my $to = "1";

return 0 unless (
$self->TransactionObj->Type eq "CustomField" 
&& $self->TransactionObj->ReferenceType eq "RT::ObjectCustomFieldValue" 
&& $self->TicketObj->LoadCustomFieldByIdentifier(RT->Config->Get("EscalationField"))->id eq $self->TransactionObj->Field
);

my $old = ($from eq "" && ! $self->TransactionObj->OldReference);
$old ||= ($self->TransactionObj->OldReference && $self->TransactionObj->OldReferenceObject->Content eq $from);
my $new = ($to eq "" && ! $self->TransactionObj->NewReference);
$new ||= ($self->TransactionObj->NewReference && $self->TransactionObj->NewReferenceObject->Content eq $to);
$new && $old;
'
}
);